use sakila;


-- 1A
select 
first_name,
last_name
from actor;

-- 1B
ALTER TABLE actor
ADD COLUMN ACTOR_NAME varchar(30);

UPDATE actor
SET ACTOR_NAME = concat(upper(first_name), " ", upper(last_name));

-- 2A
select ACTOR_ID, FIRST_NAME, LAST_NAME FROM ACTOR
WHERE FIRST_NAME IN ('Joe');


-- 2B
select ACTOR_NAME FROM ACTOR
WHERE LAST_NAME LIKE '%GEN%';


-- 2C
select LAST_NAME, FIRST_NAME FROM ACTOR
WHERE LAST_NAME LIKE '%LI%' 
ORDER BY LAST_NAME ASC;


-- 2D
select COUNTRY_ID, COUNTRY FROM COUNTRY
WHERE COUNTRY IN ('Afghanistan', 'Bangladesh', 'China');

-- 3a
ALTER TABLE ACTOR
ADD COLUMN DESCRIPTION BLOB;

-- 3B
ALTER TABLE ACTOR
DROP COLUMN DESCRIPTION;

-- 4A
SELECT
LAST_NAME,
COUNT(DISTINCT ACTOR_ID) AS COUNT_OF_ACTOR

FROM ACTOR
GROUP BY 1;

-- 4B
SELECT * FROM

(SELECT
LAST_NAME,
COUNT(DISTINCT ACTOR_ID) AS COUNT_OF_ACTOR

FROM ACTOR
GROUP BY 1) AS LAST_NAME_COUNT

WHERE COUNT_OF_ACTOR > 1;

-- 4C
UPDATE ACTOR
SET FIRST_NAME = 'HARPO'
WHERE FIRST_NAME = 'GROUCHO';

-- 4D
UPDATE ACTOR
SET FIRST_NAME = 'GROUCHO'
WHERE FIRST_NAME = 'HARPO';

-- 5A
SHOW CREATE TABLE ADDRESS;

-- 6A
SELECT 
FIRST_NAME,
LAST_NAME,
ADDRESS

FROM
STAFF
INNER JOIN ADDRESS ON STAFF.ADDRESS_ID = ADDRESS.ADDRESS_ID;

-- 6B
SELECT
FIRST_NAME,
LAST_NAME,
SUM(AMOUNT) AS TOTAL_SPEND

FROM
STAFF
RIGHT JOIN PAYMENT ON STAFF.STAFF_ID = PAYMENT.STAFF_ID
WHERE 
PAYMENT_DATE >= '2005-08-01' AND
PAYMENT_DATE <= '2005-08-31'

GROUP BY 1, 2;

-- 6C
SELECT
TITLE,
COUNT(DISTINCT ACTOR_ID)

FROM
FILM
INNER JOIN FILM_ACTOR ON FILM.FILM_ID = FILM_ACTOR.FILM_ID

GROUP BY 1;

-- 6D
SELECT
COUNT(INVENTORY_ID)
FROM INVENTORY
INNER JOIN FILM ON INVENTORY.FILM_ID = FILM.FILM_ID
WHERE TITLE = 'Hunchback Impossible';


-- 6e
SELECT
FIRST_NAME,
LAST_NAME,
SUM(AMOUNT) AS TOTAL_AMOUNT_PAID
FROM CUSTOMER
INNER JOIN PAYMENT ON CUSTOMER.CUSTOMER_ID = PAYMENT.CUSTOMER_ID
GROUP BY 1,2
ORDER BY LAST_NAME ASC;


-- 7A
SELECT
TITLE
FROM
FILM
INNER JOIN LANGUAGE ON FILM.LANGUAGE_ID = LANGUAGE.LANGUAGE_ID
WHERE TITLE LIKE '%K' OR
TITLE LIKE '%Q' AND
NAME = 'English';


-- 7B
SELECT 
ACTOR_NAME
FROM ACTOR
INNER JOIN FILM_ACTOR ON ACTOR.ACTOR_ID = FILM_ACTOR.ACTOR_ID
INNER JOIN FILM ON FILM_ACTOR.FILM_ID = FILM.FILM_ID
WHERE TITLE = 'Alone Trip';


-- 7c
SELECT
FIRST_NAME,
LAST_NAME,
EMAIL
FROM CUSTOMER
INNER JOIN ADDRESS ON CUSTOMER.ADDRESS_ID = ADDRESS.ADDRESS_ID
INNER JOIN CITY ON ADDRESS.CITY_ID = CITY.CITY_ID
INNER JOIN COUNTRY ON CITY.COUNTRY_ID = COUNTRY.COUNTRY_ID
WHERE COUNTRY = 'Canada';


-- 7D
SELECT
TITLE
FROM
FILM
INNER JOIN FILM_CATEGORY ON FILM.FILM_ID = FILM_CATEGORY.FILM_ID
INNER JOIN CATEGORY ON FILM_CATEGORY.CATEGORY_ID = CATEGORY.CATEGORY_ID
WHERE NAME = 'Family';


-- 7E
SELECT
TITLE,
COUNT(RENTAL_ID) AS RENTAL_VOLUME
FROM
RENTAL
INNER JOIN INVENTORY ON RENTAL.INVENTORY_ID = INVENTORY.INVENTORY_ID
INNER JOIN FILM ON INVENTORY.FILM_ID = FILM.FILM_ID
GROUP BY 1
ORDER BY RENTAL_VOLUME DESC;


-- 7F
SELECT
STORE.STORE_ID,
SUM(AMOUNT) AS REVENUE
FROM STORE
INNER JOIN CUSTOMER ON STORE.STORE_ID = CUSTOMER.STORE_ID
INNER JOIN PAYMENT ON CUSTOMER.CUSTOMER_ID = PAYMENT.PAYMENT_ID
GROUP BY 1;


-- 7G
SELECT
STORE.STORE_ID,
CITY,
COUNTRY
FROM STORE
INNER JOIN ADDRESS ON STORE.ADDRESS_ID = ADDRESS.ADDRESS_ID
INNER JOIN CITY ON ADDRESS.CITY_ID = CITY.CITY_ID
INNER JOIN COUNTRY ON CITY.COUNTRY_ID = COUNTRY.COUNTRY_ID;


-- 7H
SELECT
NAME AS GENRE,
SUM(AMOUNT) AS GROSS_REVENUE
FROM
CATEGORY
INNER JOIN FILM_CATEGORY ON CATEGORY.CATEGORY_ID = FILM_CATEGORY.CATEGORY_ID
INNER JOIN INVENTORY ON FILM_CATEGORY.FILM_ID = INVENTORY.FILM_ID
INNER JOIN RENTAL ON INVENTORY.INVENTORY_ID = RENTAL.INVENTORY_ID
INNER JOIN PAYMENT ON RENTAL.RENTAL_ID = PAYMENT.RENTAL_ID
GROUP BY 1
ORDER BY GROSS_REVENUE DESC
LIMIT 5;


-- 8A
CREATE VIEW GENRE_VIEW AS
SELECT
NAME AS GENRE,
SUM(AMOUNT) AS GROSS_REVENUE
FROM
CATEGORY
INNER JOIN FILM_CATEGORY ON CATEGORY.CATEGORY_ID = FILM_CATEGORY.CATEGORY_ID
INNER JOIN INVENTORY ON FILM_CATEGORY.FILM_ID = INVENTORY.FILM_ID
INNER JOIN RENTAL ON INVENTORY.INVENTORY_ID = RENTAL.INVENTORY_ID
INNER JOIN PAYMENT ON RENTAL.RENTAL_ID = PAYMENT.RENTAL_ID
GROUP BY 1
ORDER BY GROSS_REVENUE DESC
LIMIT 5;


-- 8B
SELECT * FROM GENRE_VIEW;


-- 8C
DROP VIEW GENRE_VIEW;



